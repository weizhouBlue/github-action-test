{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"welcome Your documentation's first page , The path is relative to the \"root\" option readme: ./README.md Your documentation's table of content , The path is relative to the \"root\" option If you don't specify a summary, and GitBook does not find a SUMMARY.md file at the root of your docs, GitBook will infer the table of contents from the folder structure and the Markdown files below summary format: https://docs.gitbook.com/integrations/git-sync/content-configuration#summary summary: ./SUMMARY.md","title":"welcome"},{"location":"#welcome","text":"Your documentation's first page , The path is relative to the \"root\" option readme: ./README.md Your documentation's table of content , The path is relative to the \"root\" option If you don't specify a summary, and GitBook does not find a SUMMARY.md file at the root of your docs, GitBook will infer the table of contents from the folder structure and the Markdown files below summary format: https://docs.gitbook.com/integrations/git-sync/content-configuration#summary summary: ./SUMMARY.md","title":"welcome"},{"location":"configuration/configmap/","text":"","title":"Configmap"},{"location":"configuration/env/","text":"environment of spiderpool controller and spiderpool agent","title":"environment of spiderpool controller and spiderpool agent"},{"location":"configuration/env/#environment-of-spiderpool-controller-and-spiderpool-agent","text":"","title":"environment of spiderpool controller and spiderpool agent"},{"location":"contributing/development/changelog/","text":"changelog how automatically generate the version changelog 1 all PR should be labeled with \"pr/release/***\" and could be merged 2 when push a tag, automatically create the changelog the changelog content include: (1) New Features: it include all PR labelled with \"pr/release/feature-new\" (2) Changed Features: it include all PR labelled with \"pr/release/feature-changed\" (3) Fixes: it include all PR labelled with \"pr/release/bug\" (4) all historical commit within this version 3 the changelog will be attached to github RELEASE and submit to /changelogs of branch 'github_pages'","title":"changelog"},{"location":"contributing/development/changelog/#changelog","text":"","title":"changelog"},{"location":"contributing/development/changelog/#how-automatically-generate-the-version-changelog","text":"","title":"how automatically generate the version changelog"},{"location":"contributing/development/changelog/#1-all-pr-should-be-labeled-with-prrelease-and-could-be-merged","text":"","title":"1 all PR should be labeled with \"pr/release/***\" and could be merged"},{"location":"contributing/development/changelog/#2-when-push-a-tag-automatically-create-the-changelog","text":"the changelog content include: (1) New Features: it include all PR labelled with \"pr/release/feature-new\" (2) Changed Features: it include all PR labelled with \"pr/release/feature-changed\" (3) Fixes: it include all PR labelled with \"pr/release/bug\" (4) all historical commit within this version","title":"2 when push a tag, automatically create the changelog"},{"location":"contributing/development/changelog/#3-the-changelog-will-be-attached-to-github-release-and-submit-to-changelogs-of-branch-github_pages","text":"","title":"3 the changelog will be attached to github RELEASE and submit to /changelogs of branch 'github_pages'"},{"location":"contributing/development/chart/","text":"Chart Management the '/' of branch 'github_pages' is used as github page each version of chart package will be automatically created by CI, they will be pushed to '/chart' of branch 'github_pages'. the '/index.yaml' of branch 'github_pages' will also be updated by CI. so, you could use following command to get the chart helm repo add spiderpool https://spidernet-io.github.io/spiderpool","title":"Chart Management"},{"location":"contributing/development/chart/#chart-management","text":"the '/' of branch 'github_pages' is used as github page each version of chart package will be automatically created by CI, they will be pushed to '/chart' of branch 'github_pages'. the '/index.yaml' of branch 'github_pages' will also be updated by CI. so, you could use following command to get the chart helm repo add spiderpool https://spidernet-io.github.io/spiderpool","title":"Chart Management"},{"location":"contributing/development/daily_build/","text":"daily smoke build CI image With cache acceleration, build two ci image and push to ghcr (1) ****-ci:${ref} : the normal image (2) ****-ci:${ref}-rate : image who turns on 'go race' and 'deadlock detect' the CI will clean ci images at interval","title":"daily smoke"},{"location":"contributing/development/daily_build/#daily-smoke","text":"","title":"daily smoke"},{"location":"contributing/development/daily_build/#build-ci-image","text":"With cache acceleration, build two ci image and push to ghcr (1) ****-ci:${ref} : the normal image (2) ****-ci:${ref}-rate : image who turns on 'go race' and 'deadlock detect' the CI will clean ci images at interval","title":"build CI image"},{"location":"contributing/development/github_pages/","text":"github pages the branch 'github_pages' is set as github page can access directly via https://weizhoublue.github.io/github-action-test/ it is used as chart registry chart package of each version is stored on '/charts' and '/index.yaml' will be updated it is used as gitbook documentation is store on '/docs' , the directory is set to gitbook can access directly via https://lanwz.gitbook.io/github_action_test/","title":"github pages"},{"location":"contributing/development/github_pages/#github-pages","text":"the branch 'github_pages' is set as github page can access directly via https://weizhoublue.github.io/github-action-test/","title":"github pages"},{"location":"contributing/development/github_pages/#it-is-used-as-chart-registry","text":"chart package of each version is stored on '/charts' and '/index.yaml' will be updated","title":"it is used as chart registry"},{"location":"contributing/development/github_pages/#it-is-used-as-gitbook","text":"documentation is store on '/docs' , the directory is set to gitbook can access directly via https://lanwz.gitbook.io/github_action_test/","title":"it is used as gitbook"},{"location":"contributing/development/issue/","text":"issue manager if an issue lasts stale longer than 60 days, label it with \"issue/stale\" and then close it after 14 days","title":"issue manager"},{"location":"contributing/development/issue/#issue-manager","text":"if an issue lasts stale longer than 60 days, label it with \"issue/stale\" and then close it after 14 days","title":"issue manager"},{"location":"contributing/development/pullrequest/","text":"PR Management after submitting a pull request, the reviewer is assigned by the CODEOWNERS. if a PR lasts stale longer than 60 days, label it with \"pr/stale\" and then close it after 14 days a PR may trigger following workflows, it should meet all of them for merging PR action: check signed off if a pr is not signed off, a robot comment will be update to prompted action: check yaml file issue you could find the reported issue description https://yamllint.readthedocs.io/en/stable/rules.html use following to find the issue on you local machine make lint-yaml action: go source code check any go file updated, will check it with following: 1 mod dependency updated, golangci-lint, gofmt updated, go vet, use internal lock pkg 2 code quality check, like codeql and gokart 3 build binary 4 unitest and upload coverage to codecov 5 action: lint license action: license any go or shell file should be licensed if it belongs to spiderpool, could set it as // Copyright 2022 Authors of spidernet-io // SPDX-License-Identifier: Apache-2.0 action: lint markdown file check markdonw file format and best practice. if it fails, the reason could refer to https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md you could test it on local machine with following command make lint-markdown-format you could tyr to justify it on local machine with following command make fix-markdown-format action: lint yaml file check yaml file format and best practice. if it fails, the reason could refer to https://yamllint.readthedocs.io/en/stable/rules.html you could test it on local machine with following command make lint-yaml action: lint chart any update about chart file under '/charts' action: lint openapi.yaml any update about openapi.yaml, will be checked for the yaml validation action: other github APP check from https://www.codefactor.io action: check code spell error check on local machine make lint-code-spell fix on local machine make fix-code-spell for ignored case, please edit .github/codespell-ignorewords and make sure all letters should be lower-case need review any PR need 2 review, if meet, will auto label it with \"pr/approved\" and \"pr/need-release-label\"","title":"PR Management"},{"location":"contributing/development/pullrequest/#pr-management","text":"after submitting a pull request, the reviewer is assigned by the CODEOWNERS. if a PR lasts stale longer than 60 days, label it with \"pr/stale\" and then close it after 14 days a PR may trigger following workflows, it should meet all of them for merging PR","title":"PR Management"},{"location":"contributing/development/pullrequest/#action-check-signed-off","text":"if a pr is not signed off, a robot comment will be update to prompted","title":"action: check signed off"},{"location":"contributing/development/pullrequest/#action-check-yaml-file-issue","text":"you could find the reported issue description https://yamllint.readthedocs.io/en/stable/rules.html use following to find the issue on you local machine make lint-yaml","title":"action: check yaml file issue"},{"location":"contributing/development/pullrequest/#action-go-source-code-check","text":"any go file updated, will check it with following: 1 mod dependency updated, golangci-lint, gofmt updated, go vet, use internal lock pkg 2 code quality check, like codeql and gokart 3 build binary 4 unitest and upload coverage to codecov 5 action: lint license","title":"action: go source code check"},{"location":"contributing/development/pullrequest/#action-license","text":"any go or shell file should be licensed if it belongs to spiderpool, could set it as // Copyright 2022 Authors of spidernet-io // SPDX-License-Identifier: Apache-2.0","title":"action: license"},{"location":"contributing/development/pullrequest/#action-lint-markdown-file","text":"check markdonw file format and best practice. if it fails, the reason could refer to https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md you could test it on local machine with following command make lint-markdown-format you could tyr to justify it on local machine with following command make fix-markdown-format","title":"action: lint markdown file"},{"location":"contributing/development/pullrequest/#action-lint-yaml-file","text":"check yaml file format and best practice. if it fails, the reason could refer to https://yamllint.readthedocs.io/en/stable/rules.html you could test it on local machine with following command make lint-yaml","title":"action: lint yaml file"},{"location":"contributing/development/pullrequest/#action-lint-chart","text":"any update about chart file under '/charts'","title":"action: lint chart"},{"location":"contributing/development/pullrequest/#action-lint-openapiyaml","text":"any update about openapi.yaml, will be checked for the yaml validation","title":"action: lint openapi.yaml"},{"location":"contributing/development/pullrequest/#action-other-github-app","text":"check from https://www.codefactor.io","title":"action: other github APP"},{"location":"contributing/development/pullrequest/#action-check-code-spell-error","text":"check on local machine make lint-code-spell fix on local machine make fix-code-spell for ignored case, please edit .github/codespell-ignorewords and make sure all letters should be lower-case","title":"action: check code spell error"},{"location":"contributing/development/pullrequest/#need-review","text":"any PR need 2 review, if meet, will auto label it with \"pr/approved\" and \"pr/need-release-label\"","title":"need review"},{"location":"contributing/development/release/","text":"workflow for release if a tag vXX.XX.XX is puhed , the following will auto trigger: 1 build the images with the pushed tag, push to ghcr registry 2 generate the changelog by historical PR with \"pr/release/*\" submit the changelog file to branch 'github_pages', with PR label \"pr/release/robot_update_githubpage\". 3 build the chart package with the pushed tag, and submit a PR to branch 'github_pages' it commits the new chart package to '/charts' and update /index.yaml on the branch 'github_pages' 4 submit '/docs' of branch 'main' to '/docs' of branch 'github_pages' 5 create a Github Realse attached with the chart and changelog finnally, by hand, need approve the chart PR with label \"pr/release/robot_update_githubpage\" , and changelog PR with label \"pr/release/robot_update_githubpage\"","title":"workflow for release"},{"location":"contributing/development/release/#workflow-for-release","text":"if a tag vXX.XX.XX is puhed , the following will auto trigger:","title":"workflow for release"},{"location":"contributing/development/release/#1-build-the-images-with-the-pushed-tag-push-to-ghcr-registry","text":"","title":"1 build the images with the pushed tag, push to ghcr registry"},{"location":"contributing/development/release/#2-generate-the-changelog-by-historical-pr-with-prrelease","text":"submit the changelog file to branch 'github_pages', with PR label \"pr/release/robot_update_githubpage\".","title":"2 generate the changelog by historical PR with \"pr/release/*\""},{"location":"contributing/development/release/#3-build-the-chart-package-with-the-pushed-tag-and-submit-a-pr-to-branch-github_pages","text":"it commits the new chart package to '/charts' and update /index.yaml on the branch 'github_pages'","title":"3 build the chart package with the pushed tag, and submit a PR to branch 'github_pages'"},{"location":"contributing/development/release/#4-submit-docs-of-branch-main-to-docs-of-branch-github_pages","text":"","title":"4 submit '/docs' of branch 'main' to '/docs' of branch 'github_pages'"},{"location":"contributing/development/release/#5-create-a-github-realse-attached-with-the-chart-and-changelog","text":"","title":"5 create a Github Realse attached with the chart and changelog"},{"location":"contributing/development/release/#finnally-by-hand-need-approve-the-chart-pr-with-label-prreleaserobot_update_githubpage-and-changelog-pr-with-label-prreleaserobot_update_githubpage","text":"","title":"finnally, by hand, need approve the chart PR with label \"pr/release/robot_update_githubpage\" , and changelog PR with label \"pr/release/robot_update_githubpage\""}]}