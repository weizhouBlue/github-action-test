name: codeql

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  #schedule:
  #  - cron: "45 6 * * 3"

permissions: read-all

jobs:
  #filter changes base filt path , so step analyze can do less thing
  filter_changes:
    name: Deduce required tests from code changes
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    outputs:
      go-changes: ${{ steps.go-changes.outputs.src }}
    steps:
      - name: Checkout code
        if: ${{ !github.event.pull_request }}
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Check code changes
        uses: dorny/paths-filter@v2.10.2
        id: go-changes
        with:
          base: ${{ github.event.pull_request.base.sha }}
          ref: ${{ github.event.pull_request.head.sha }}
          filters: |
            src:
              - .github/workflows/lint-codeql.yaml
              - '**/*.go'
              - 'go.mod'
              - 'go.sum'

  # industry-leading semantic code analysis engine,
  # against a repository's source code to find security vulnerabilities.
  # It then automatically uploads the results to GitHub so they can be displayed in the repository's security tab
  analyze:
    # run if filters.src was changed
    needs: filter_changes
    if: ${{ needs.filter_changes.outputs.go-changes == 'true' || github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 1
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1.1.4
        with:
          languages: go
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1.1.4
